# serverless.yml
service: fdc-org-mgmt
plugins:
  - serverless-python-requirements
  - serverless-wsgi
  - serverless-domain-manager
  - serverless-dynamodb-local
custom:
  wsgi:
    app: app.app
    packRequirements: false
  pythonRequirements:
    noDeploy: []
    dockerizePip: non-linux
    useDownloadCache: false
    fileName: ./requirements.txt
  customDomain:
    domainName: ${env:FQDN}
    certificateName: ${env:FQDN}
    basePath: ""
    createRoute53Record: false
  dynamodb:
    stages:
      - dev
      - local
provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  role: ${env:ROLE_ARN}
  environment:
    FQDN: ${env:FQDN}
    SECRET_NAME: ${env:SECRET_NAME}
    STAGE: ${opt:stage, 'dev'}
    USERS_TABLE: ${self:service}-${self:provider.stage}
functions:
  app:
    handler: wsgi_handler.handler
    events:
      - http: ANY /
      - http: "ANY {proxy+}"
resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.USERS_TABLE}
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
